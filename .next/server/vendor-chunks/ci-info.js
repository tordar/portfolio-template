"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ci-info";
exports.ids = ["vendor-chunks/ci-info"];
exports.modules = {

/***/ "(rsc)/./node_modules/ci-info/index.js":
/*!***************************************!*\
  !*** ./node_modules/ci-info/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst vendors = __webpack_require__(/*! ./vendors.json */ \"(rsc)/./node_modules/ci-info/vendors.json\")\n\nconst env = process.env\n\n// Used for testing only\nObject.defineProperty(exports, \"_vendors\", ({\n  value: vendors.map(function (v) {\n    return v.constant\n  })\n}))\n\nexports.name = null\nexports.isPR = null\nexports.id = null\n\nvendors.forEach(function (vendor) {\n  const envs = Array.isArray(vendor.env) ? vendor.env : [vendor.env]\n  const isCI = envs.every(function (obj) {\n    return checkEnv(obj)\n  })\n\n  exports[vendor.constant] = isCI\n\n  if (!isCI) {\n    return\n  }\n\n  exports.name = vendor.name\n  exports.isPR = checkPR(vendor)\n  exports.id = vendor.constant\n})\n\nexports.isCI = !!(\n  env.CI !== 'false' && // Bypass all checks if CI env is explicitly set to 'false'\n  (env.BUILD_ID || // Jenkins, Cloudbees\n    env.BUILD_NUMBER || // Jenkins, TeamCity\n    env.CI || // Travis CI, CircleCI, Cirrus CI, Gitlab CI, Appveyor, CodeShip, dsari\n    env.CI_APP_ID || // Appflow\n    env.CI_BUILD_ID || // Appflow\n    env.CI_BUILD_NUMBER || // Appflow\n    env.CI_NAME || // Codeship and others\n    env.CONTINUOUS_INTEGRATION || // Travis CI, Cirrus CI\n    env.RUN_ID || // TaskCluster, dsari\n    exports.name ||\n    false)\n)\n\nfunction checkEnv (obj) {\n  // \"env\": \"CIRRUS\"\n  if (typeof obj === 'string') return !!env[obj]\n\n  // \"env\": { \"env\": \"NODE\", \"includes\": \"/app/.heroku/node/bin/node\" }\n  if ('env' in obj) {\n    // Currently there are no other types, uncomment when there are\n    // if ('includes' in obj) {\n    return env[obj.env] && env[obj.env].includes(obj.includes)\n    // }\n  }\n\n  if ('any' in obj) {\n    return obj.any.some(function (k) {\n      return !!env[k]\n    })\n  }\n\n  return Object.keys(obj).every(function (k) {\n    return env[k] === obj[k]\n  })\n}\n\nfunction checkPR (vendor) {\n  switch (typeof vendor.pr) {\n    case 'string':\n      // \"pr\": \"CIRRUS_PR\"\n      return !!env[vendor.pr]\n    case 'object':\n      if ('env' in vendor.pr) {\n        if ('any' in vendor.pr) {\n          // \"pr\": { \"env\": \"CODEBUILD_WEBHOOK_EVENT\", \"any\": [\"PULL_REQUEST_CREATED\", \"PULL_REQUEST_UPDATED\"] }\n          return vendor.pr.any.some(function (key) {\n            return env[vendor.pr.env] === key\n          })\n        } else {\n          // \"pr\": { \"env\": \"BUILDKITE_PULL_REQUEST\", \"ne\": \"false\" }\n          return vendor.pr.env in env && env[vendor.pr.env] !== vendor.pr.ne\n        }\n      } else if ('any' in vendor.pr) {\n        // \"pr\": { \"any\": [\"ghprbPullId\", \"CHANGE_ID\"] }\n        return vendor.pr.any.some(function (key) {\n          return !!env[key]\n        })\n      } else {\n        // \"pr\": { \"DRONE_BUILD_EVENT\": \"pull_request\" }\n        return checkEnv(vendor.pr)\n      }\n    default:\n      // PR detection not supported for this vendor\n      return null\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY2ktaW5mby9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWixnQkFBZ0IsbUJBQU8sQ0FBQyxpRUFBZ0I7O0FBRXhDOztBQUVBO0FBQ0EsNENBQTJDO0FBQzNDO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyxFQUFDOztBQUVGLFlBQVk7QUFDWixZQUFZO0FBQ1osVUFBVTs7QUFFVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBOztBQUVBLEVBQUUsWUFBWTtBQUNkLEVBQUUsWUFBWTtBQUNkLEVBQUUsVUFBVTtBQUNaLENBQUM7O0FBRUQsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLFdBQVc7QUFDWCxVQUFVO0FBQ1YscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3RvcmRhcnRvbW1lcnZpay9Eb2N1bWVudHMvY29kZS9wb3J0Zm9saW8tMjQtdGVtcGxhdGUvbm9kZV9tb2R1bGVzL2NpLWluZm8vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IHZlbmRvcnMgPSByZXF1aXJlKCcuL3ZlbmRvcnMuanNvbicpXG5cbmNvbnN0IGVudiA9IHByb2Nlc3MuZW52XG5cbi8vIFVzZWQgZm9yIHRlc3Rpbmcgb25seVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfdmVuZG9ycycsIHtcbiAgdmFsdWU6IHZlbmRvcnMubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgcmV0dXJuIHYuY29uc3RhbnRcbiAgfSlcbn0pXG5cbmV4cG9ydHMubmFtZSA9IG51bGxcbmV4cG9ydHMuaXNQUiA9IG51bGxcbmV4cG9ydHMuaWQgPSBudWxsXG5cbnZlbmRvcnMuZm9yRWFjaChmdW5jdGlvbiAodmVuZG9yKSB7XG4gIGNvbnN0IGVudnMgPSBBcnJheS5pc0FycmF5KHZlbmRvci5lbnYpID8gdmVuZG9yLmVudiA6IFt2ZW5kb3IuZW52XVxuICBjb25zdCBpc0NJID0gZW52cy5ldmVyeShmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIGNoZWNrRW52KG9iailcbiAgfSlcblxuICBleHBvcnRzW3ZlbmRvci5jb25zdGFudF0gPSBpc0NJXG5cbiAgaWYgKCFpc0NJKSB7XG4gICAgcmV0dXJuXG4gIH1cblxuICBleHBvcnRzLm5hbWUgPSB2ZW5kb3IubmFtZVxuICBleHBvcnRzLmlzUFIgPSBjaGVja1BSKHZlbmRvcilcbiAgZXhwb3J0cy5pZCA9IHZlbmRvci5jb25zdGFudFxufSlcblxuZXhwb3J0cy5pc0NJID0gISEoXG4gIGVudi5DSSAhPT0gJ2ZhbHNlJyAmJiAvLyBCeXBhc3MgYWxsIGNoZWNrcyBpZiBDSSBlbnYgaXMgZXhwbGljaXRseSBzZXQgdG8gJ2ZhbHNlJ1xuICAoZW52LkJVSUxEX0lEIHx8IC8vIEplbmtpbnMsIENsb3VkYmVlc1xuICAgIGVudi5CVUlMRF9OVU1CRVIgfHwgLy8gSmVua2lucywgVGVhbUNpdHlcbiAgICBlbnYuQ0kgfHwgLy8gVHJhdmlzIENJLCBDaXJjbGVDSSwgQ2lycnVzIENJLCBHaXRsYWIgQ0ksIEFwcHZleW9yLCBDb2RlU2hpcCwgZHNhcmlcbiAgICBlbnYuQ0lfQVBQX0lEIHx8IC8vIEFwcGZsb3dcbiAgICBlbnYuQ0lfQlVJTERfSUQgfHwgLy8gQXBwZmxvd1xuICAgIGVudi5DSV9CVUlMRF9OVU1CRVIgfHwgLy8gQXBwZmxvd1xuICAgIGVudi5DSV9OQU1FIHx8IC8vIENvZGVzaGlwIGFuZCBvdGhlcnNcbiAgICBlbnYuQ09OVElOVU9VU19JTlRFR1JBVElPTiB8fCAvLyBUcmF2aXMgQ0ksIENpcnJ1cyBDSVxuICAgIGVudi5SVU5fSUQgfHwgLy8gVGFza0NsdXN0ZXIsIGRzYXJpXG4gICAgZXhwb3J0cy5uYW1lIHx8XG4gICAgZmFsc2UpXG4pXG5cbmZ1bmN0aW9uIGNoZWNrRW52IChvYmopIHtcbiAgLy8gXCJlbnZcIjogXCJDSVJSVVNcIlxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ3N0cmluZycpIHJldHVybiAhIWVudltvYmpdXG5cbiAgLy8gXCJlbnZcIjogeyBcImVudlwiOiBcIk5PREVcIiwgXCJpbmNsdWRlc1wiOiBcIi9hcHAvLmhlcm9rdS9ub2RlL2Jpbi9ub2RlXCIgfVxuICBpZiAoJ2VudicgaW4gb2JqKSB7XG4gICAgLy8gQ3VycmVudGx5IHRoZXJlIGFyZSBubyBvdGhlciB0eXBlcywgdW5jb21tZW50IHdoZW4gdGhlcmUgYXJlXG4gICAgLy8gaWYgKCdpbmNsdWRlcycgaW4gb2JqKSB7XG4gICAgcmV0dXJuIGVudltvYmouZW52XSAmJiBlbnZbb2JqLmVudl0uaW5jbHVkZXMob2JqLmluY2x1ZGVzKVxuICAgIC8vIH1cbiAgfVxuXG4gIGlmICgnYW55JyBpbiBvYmopIHtcbiAgICByZXR1cm4gb2JqLmFueS5zb21lKGZ1bmN0aW9uIChrKSB7XG4gICAgICByZXR1cm4gISFlbnZba11cbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikuZXZlcnkoZnVuY3Rpb24gKGspIHtcbiAgICByZXR1cm4gZW52W2tdID09PSBvYmpba11cbiAgfSlcbn1cblxuZnVuY3Rpb24gY2hlY2tQUiAodmVuZG9yKSB7XG4gIHN3aXRjaCAodHlwZW9mIHZlbmRvci5wcikge1xuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAvLyBcInByXCI6IFwiQ0lSUlVTX1BSXCJcbiAgICAgIHJldHVybiAhIWVudlt2ZW5kb3IucHJdXG4gICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgIGlmICgnZW52JyBpbiB2ZW5kb3IucHIpIHtcbiAgICAgICAgaWYgKCdhbnknIGluIHZlbmRvci5wcikge1xuICAgICAgICAgIC8vIFwicHJcIjogeyBcImVudlwiOiBcIkNPREVCVUlMRF9XRUJIT09LX0VWRU5UXCIsIFwiYW55XCI6IFtcIlBVTExfUkVRVUVTVF9DUkVBVEVEXCIsIFwiUFVMTF9SRVFVRVNUX1VQREFURURcIl0gfVxuICAgICAgICAgIHJldHVybiB2ZW5kb3IucHIuYW55LnNvbWUoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIGVudlt2ZW5kb3IucHIuZW52XSA9PT0ga2V5XG4gICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBcInByXCI6IHsgXCJlbnZcIjogXCJCVUlMREtJVEVfUFVMTF9SRVFVRVNUXCIsIFwibmVcIjogXCJmYWxzZVwiIH1cbiAgICAgICAgICByZXR1cm4gdmVuZG9yLnByLmVudiBpbiBlbnYgJiYgZW52W3ZlbmRvci5wci5lbnZdICE9PSB2ZW5kb3IucHIubmVcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICgnYW55JyBpbiB2ZW5kb3IucHIpIHtcbiAgICAgICAgLy8gXCJwclwiOiB7IFwiYW55XCI6IFtcImdocHJiUHVsbElkXCIsIFwiQ0hBTkdFX0lEXCJdIH1cbiAgICAgICAgcmV0dXJuIHZlbmRvci5wci5hbnkuc29tZShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgcmV0dXJuICEhZW52W2tleV1cbiAgICAgICAgfSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFwicHJcIjogeyBcIkRST05FX0JVSUxEX0VWRU5UXCI6IFwicHVsbF9yZXF1ZXN0XCIgfVxuICAgICAgICByZXR1cm4gY2hlY2tFbnYodmVuZG9yLnByKVxuICAgICAgfVxuICAgIGRlZmF1bHQ6XG4gICAgICAvLyBQUiBkZXRlY3Rpb24gbm90IHN1cHBvcnRlZCBmb3IgdGhpcyB2ZW5kb3JcbiAgICAgIHJldHVybiBudWxsXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ci-info/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ci-info/vendors.json":
/*!*******************************************!*\
  !*** ./node_modules/ci-info/vendors.json ***!
  \*******************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('[{"name":"Agola CI","constant":"AGOLA","env":"AGOLA_GIT_REF","pr":"AGOLA_PULL_REQUEST_ID"},{"name":"Appcircle","constant":"APPCIRCLE","env":"AC_APPCIRCLE","pr":{"env":"AC_GIT_PR","ne":"false"}},{"name":"AppVeyor","constant":"APPVEYOR","env":"APPVEYOR","pr":"APPVEYOR_PULL_REQUEST_NUMBER"},{"name":"AWS CodeBuild","constant":"CODEBUILD","env":"CODEBUILD_BUILD_ARN","pr":{"env":"CODEBUILD_WEBHOOK_EVENT","any":["PULL_REQUEST_CREATED","PULL_REQUEST_UPDATED","PULL_REQUEST_REOPENED"]}},{"name":"Azure Pipelines","constant":"AZURE_PIPELINES","env":"TF_BUILD","pr":{"BUILD_REASON":"PullRequest"}},{"name":"Bamboo","constant":"BAMBOO","env":"bamboo_planKey"},{"name":"Bitbucket Pipelines","constant":"BITBUCKET","env":"BITBUCKET_COMMIT","pr":"BITBUCKET_PR_ID"},{"name":"Bitrise","constant":"BITRISE","env":"BITRISE_IO","pr":"BITRISE_PULL_REQUEST"},{"name":"Buddy","constant":"BUDDY","env":"BUDDY_WORKSPACE_ID","pr":"BUDDY_EXECUTION_PULL_REQUEST_ID"},{"name":"Buildkite","constant":"BUILDKITE","env":"BUILDKITE","pr":{"env":"BUILDKITE_PULL_REQUEST","ne":"false"}},{"name":"CircleCI","constant":"CIRCLE","env":"CIRCLECI","pr":"CIRCLE_PULL_REQUEST"},{"name":"Cirrus CI","constant":"CIRRUS","env":"CIRRUS_CI","pr":"CIRRUS_PR"},{"name":"Codefresh","constant":"CODEFRESH","env":"CF_BUILD_ID","pr":{"any":["CF_PULL_REQUEST_NUMBER","CF_PULL_REQUEST_ID"]}},{"name":"Codemagic","constant":"CODEMAGIC","env":"CM_BUILD_ID","pr":"CM_PULL_REQUEST"},{"name":"Codeship","constant":"CODESHIP","env":{"CI_NAME":"codeship"}},{"name":"Drone","constant":"DRONE","env":"DRONE","pr":{"DRONE_BUILD_EVENT":"pull_request"}},{"name":"dsari","constant":"DSARI","env":"DSARI"},{"name":"Earthly","constant":"EARTHLY","env":"EARTHLY_CI"},{"name":"Expo Application Services","constant":"EAS","env":"EAS_BUILD"},{"name":"Gerrit","constant":"GERRIT","env":"GERRIT_PROJECT"},{"name":"Gitea Actions","constant":"GITEA_ACTIONS","env":"GITEA_ACTIONS"},{"name":"GitHub Actions","constant":"GITHUB_ACTIONS","env":"GITHUB_ACTIONS","pr":{"GITHUB_EVENT_NAME":"pull_request"}},{"name":"GitLab CI","constant":"GITLAB","env":"GITLAB_CI","pr":"CI_MERGE_REQUEST_ID"},{"name":"GoCD","constant":"GOCD","env":"GO_PIPELINE_LABEL"},{"name":"Google Cloud Build","constant":"GOOGLE_CLOUD_BUILD","env":"BUILDER_OUTPUT"},{"name":"Harness CI","constant":"HARNESS","env":"HARNESS_BUILD_ID"},{"name":"Heroku","constant":"HEROKU","env":{"env":"NODE","includes":"/app/.heroku/node/bin/node"}},{"name":"Hudson","constant":"HUDSON","env":"HUDSON_URL"},{"name":"Jenkins","constant":"JENKINS","env":["JENKINS_URL","BUILD_ID"],"pr":{"any":["ghprbPullId","CHANGE_ID"]}},{"name":"LayerCI","constant":"LAYERCI","env":"LAYERCI","pr":"LAYERCI_PULL_REQUEST"},{"name":"Magnum CI","constant":"MAGNUM","env":"MAGNUM"},{"name":"Netlify CI","constant":"NETLIFY","env":"NETLIFY","pr":{"env":"PULL_REQUEST","ne":"false"}},{"name":"Nevercode","constant":"NEVERCODE","env":"NEVERCODE","pr":{"env":"NEVERCODE_PULL_REQUEST","ne":"false"}},{"name":"Prow","constant":"PROW","env":"PROW_JOB_ID"},{"name":"ReleaseHub","constant":"RELEASEHUB","env":"RELEASE_BUILD_ID"},{"name":"Render","constant":"RENDER","env":"RENDER","pr":{"IS_PULL_REQUEST":"true"}},{"name":"Sail CI","constant":"SAIL","env":"SAILCI","pr":"SAIL_PULL_REQUEST_NUMBER"},{"name":"Screwdriver","constant":"SCREWDRIVER","env":"SCREWDRIVER","pr":{"env":"SD_PULL_REQUEST","ne":"false"}},{"name":"Semaphore","constant":"SEMAPHORE","env":"SEMAPHORE","pr":"PULL_REQUEST_NUMBER"},{"name":"Sourcehut","constant":"SOURCEHUT","env":{"CI_NAME":"sourcehut"}},{"name":"Strider CD","constant":"STRIDER","env":"STRIDER"},{"name":"TaskCluster","constant":"TASKCLUSTER","env":["TASK_ID","RUN_ID"]},{"name":"TeamCity","constant":"TEAMCITY","env":"TEAMCITY_VERSION"},{"name":"Travis CI","constant":"TRAVIS","env":"TRAVIS","pr":{"env":"TRAVIS_PULL_REQUEST","ne":"false"}},{"name":"Vela","constant":"VELA","env":"VELA","pr":{"VELA_PULL_REQUEST":"1"}},{"name":"Vercel","constant":"VERCEL","env":{"any":["NOW_BUILDER","VERCEL"]},"pr":"VERCEL_GIT_PULL_REQUEST_ID"},{"name":"Visual Studio App Center","constant":"APPCENTER","env":"APPCENTER_BUILD_ID"},{"name":"Woodpecker","constant":"WOODPECKER","env":{"CI":"woodpecker"},"pr":{"CI_BUILD_EVENT":"pull_request"}},{"name":"Xcode Cloud","constant":"XCODE_CLOUD","env":"CI_XCODE_PROJECT","pr":"CI_PULL_REQUEST_NUMBER"},{"name":"Xcode Server","constant":"XCODE_SERVER","env":"XCS"}]');

/***/ })

};
;